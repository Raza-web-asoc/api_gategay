http {
    upstream auth_service {
        server api:8000;
    }

    upstream api_1 {
        server 172.17.0.1:8080;
    }

    server {
        listen 80;

        # Verificaci√≥n del token
        location /api/verify_token {
            if ($http_authorization = "") {
                return 401 "Authorization header missing";
            }

            proxy_pass http://auth_service/token;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Ruta protegida
        location /api/prueba/ {
            auth_request /api/verify_token;

            #Obtener headers de microservicio de auth
            auth_request_set $auth_user_id $upstream_http_x_auth_user_id;
            auth_request_set $auth_user_role $upstream_http_x_auth_role;

            #Establecer los header para enviarlos al microservicio
            proxy_set_header X-Auth-User-Id $auth_user_id;
            proxy_set_header X-Auth-Role $auth_user_role;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_pass http://api_1/;
        }

        # Manejo de errores
        error_page 401 = @error_401;
        location @error_401 {
            return 401 "Unauthorized: Invalid or missing JWT";
        }
    }
}
events {}